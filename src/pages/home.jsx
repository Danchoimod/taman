import { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import '../App.css'
import Header from '../components/Header'
import Footer from '../components/Footer'
import skyBg from '../assets/img/skybackground.jpg'
import room from '../assets/img/anh1.jpg'
import Notfication from '../components/Notification'
import ZaloChat from '../components/ZaloChat';
import { createClient } from '@supabase/supabase-js'
const supabase = createClient(
  'https://xodhvzvlgwrzrdrnbzev.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhvZGh2enZsZ3dyenJkcm5iemV2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzMjkyNTYsImV4cCI6MjA2NjkwNTI1Nn0.zNtwvH1fNH-hc6iCelhdOYgaANpnKaLjYK-OpNG4tqA'
)
function Home() {
  const [count, setCount] = useState(0)
  const navigate = useNavigate(); // ‚úÖ hook d√πng ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng
  const handleClick = () => {
    navigate('/branch'); // üëâ chuy·ªÉn ƒë·∫øn trang /about
  };
  const [imageUrls, setImageUrls] = useState([])

  useEffect(() => {
    const fetchImages = async () => {
      const { data, error } = await supabase.storage.from('image').list('content', { limit: 100 })
      if (!error && data) {
        const files = data.filter(f => f.name)
        const urls = files.map(f => ({
          name: f.name,
          url: supabase.storage.from('image').getPublicUrl(`content/${f.name}`).data.publicUrl
        }))
        setImageUrls(urls)
      } else {
        console.error("L·ªói khi l·∫•y danh s√°ch ·∫£nh:", error)
      }
    }
    fetchImages()
  }, [])

  return (
    <>
      <div className="bg-mainColor min-h-screen">
        <Header></Header>
        {/* Hero section */}
        <div className="relative w-full h-[350px] md:h-[420px] overflow-hidden mt-10 flex items-center justify-center">
          <img src={skyBg} alt="B·∫ßu tr·ªùi" className="w-full h-full object-cover scale-y-[-1]" />
          <div className="absolute inset-0 bg-gradient-to-b from-black/60 to-black/30 z-10" />
          <div className="absolute inset-0 flex flex-col items-center justify-center text-white z-20">
            <h2 className="text-3xl md:text-5xl font-extrabold text-center drop-shadow-lg tracking-wide mb-4">
              Ch√†o m·ª´ng ƒë·∫øn <span className="text-blue-400">T√¢m An</span> <br />
              <span className="text-lg md:text-2xl font-semibold">N∆°i an c∆∞, v·ªØng b∆∞·ªõc t∆∞∆°ng lai.</span>
            </h2>
            <button
              onClick={handleClick}
              className="mt-4 px-8 py-3 bg-gradient-to-r from-blue-400 to-blue-600 text-white shadow-lg rounded-full font-semibold text-lg hover:scale-105 hover:from-blue-500 hover:to-blue-700 transition-all duration-300"
            >
              Kh√°m kh·∫£o
            </button>
          </div>
        </div>
        <Notfication notfi="Gi·ªõi thi·ªáu"></Notfication>
        {/* Gi·ªõi thi·ªáu */}
        <section className="text-center">
          <div className="mt-8 bg-white rounded-3xl shadow-2xl p-8 md:p-12 border border-blue-100">
            <div className="max-w-4xl mx-auto">
              <p className="text-gray-700 text-lg md:text-xl leading-relaxed font-medium">
                Nh√† tr·ªç <span className="text-blue-600 font-bold">T√¢m An</span> t·ª± h√†o mang ƒë·∫øn m·ªôt kh√¥ng gian s·ªëng hi·ªán ƒë·∫°i,
                an to√†n, ti·ªán nghi v√† ƒë·∫∑c bi·ªát l√† s·ª± t·ª± do t·ªëi ƒëa. Ch√∫ng t√¥i hi·ªÉu r·∫±ng, m·ªôt m√¥i tr∆∞·ªùng s·ªëng t·ªët kh√¥ng ch·ªâ l√†
                n∆°i ƒë·ªÉ ng·∫£ l∆∞ng m√† c√≤n l√† b·ªá ph√≥ng cho h·ªçc t·∫≠p v√† s·ª± nghi·ªáp c·ªßa b·∫°n.
              </p>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-8">
                <div className="text-center p-4 rounded-xl bg-blue-50 shadow hover:shadow-lg transition">
                  <div className="text-3xl font-bold text-blue-600">100+</div>
                  <div className="text-gray-600">Sinh vi√™n tin t∆∞·ªüng</div>
                </div>
                <div className="text-center p-4 rounded-xl bg-green-50 shadow hover:shadow-lg transition">
                  <div className="text-3xl font-bold text-green-600">24/7</div>
                  <div className="text-gray-600">H·ªó tr·ª£ an ninh</div>
                </div>
                <div className="text-center p-4 rounded-xl bg-purple-50 shadow hover:shadow-lg transition">
                  <div className="text-3xl font-bold text-purple-600">5‚òÖ</div>
                  <div className="text-gray-600">ƒê√°nh gi√° trung b√¨nh</div>
                </div>
              </div>
            </div>
          </div>
        </section>
        <Notfication notfi="Ti·ªán nghi"></Notfication>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-6xl mx-auto mt-6 mb-10">
          <Amenities
            icon="wifi"
            title="Wifi t·ªëc ƒë·ªô cao"
            message="K·∫øt n·ªëi ·ªïn ƒë·ªãnh, h·ªó tr·ª£ h·ªçc t·∫≠p v√† l√†m vi·ªác online hi·ªáu qu·∫£."
          />
          <Amenities
            icon="camera"
            title="Camera an ninh"
            message="H·ªá th·ªëng gi√°m s√°t 24/7 ƒë·∫£m b·∫£o an to√†n tuy·ªát ƒë·ªëi."
          />
          <Amenities
            icon="store"
            title="T·∫°p h√≥a & gi·∫∑t ·ªßi"
            message="Ti·∫øt ki·ªám th·ªùi gian, thu·∫≠n ti·ªán cho sinh ho·∫°t h√†ng ng√†y."
          />
          <Amenities
            icon="pet"
            title="Nu√¥i th√∫ c∆∞ng"
            message="Tho·∫£i m√°i s·ªëng c√πng th√∫ c∆∞ng m√† kh√¥ng b·ªã r√†ng bu·ªôc."
          />
          <Amenities
            icon="ac"
            title="C√≥ ƒëi·ªÅu h√≤a m√°t m·∫ª"
            message="Gi·ªØ cho cƒÉn ph√≤ng lu√¥n d·ªÖ ch·ªãu, k·ªÉ c·∫£ ng√†y h√® oi b·ª©c."
          />
          <Amenities
            icon="clock"
            title="T·ª± do gi·ªù gi·∫•c"
            message="Kh√¥ng gi·ªõi h·∫°n gi·ªù gi·∫•c ra v√†o, ph√π h·ª£p v·ªõi sinh vi√™n v√† ng∆∞·ªùi ƒëi l√†m."
          />
        </div>
        <div className="text-darkblue text-center mt-10 text-2xl font-bold tracking-wide">
          H√¨nh ·∫£nh v·ªÅ nh√† tr·ªç
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto mt-6 mb-16">
          {imageUrls.map((img, idx) => (
            <HouseImage key={idx} imgUrl={img.url} />
          ))}
        </div>
        <Footer></Footer>
        <ZaloChat
          oaid="1187923599968080778" // Thay th·∫ø b·∫±ng OA ID c·ªßa b·∫°n
          welcomeMessage="R·∫•t vui khi ƒë∆∞·ª£c h·ªó tr·ª£ b·∫°n!"
          autopopup="0"
          width="350"
          height="420"
        />
      </div>
    </>
  )
}

// Amenities c√≥ icon
const amenityIcons = {
  wifi: (
    <svg className="w-10 h-10 text-blue-400" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path d="M2.05 7.05a16 16 0 0 1 19.9 0" /><path d="M5.5 10.5a11 11 0 0 1 13 0" /><path d="M8.5 13.5a6 6 0 0 1 7 0" /><circle cx="12" cy="17" r="1.5" /></svg>
  ),
  camera: (
    <svg className="w-10 h-10 text-green-400" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><rect x="2" y="7" width="20" height="15" rx="3" /><circle cx="12" cy="14" r="3.5" /><path d="M8 7V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2" /></svg>
  ),
  store: (
    <svg className="w-10 h-10 text-yellow-400" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path d="M3 9l1-5h16l1 5" /><path d="M5 22V12H19V22" /><rect x="7" y="16" width="2" height="6" /><rect x="15" y="16" width="2" height="6" /></svg>
  ),
  pet: (
    <svg className="w-10 h-10 text-pink-400" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><circle cx="4.5" cy="9.5" r="2.5" /><circle cx="19.5" cy="9.5" r="2.5" /><ellipse cx="12" cy="17" rx="7" ry="5" /><circle cx="12" cy="7" r="3" /></svg>
  ),
  ac: (
    <svg className="w-10 h-10 text-cyan-400" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><rect x="3" y="5" width="18" height="6" rx="2" /><path d="M7 19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2" /><path d="M12 11v6" /></svg>
  ),
  clock: (
    <svg className="w-10 h-10 text-purple-400" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" /><path d="M12 6v6l4 2" /></svg>
  ),
};

function Amenities({ icon, title, message }) {
  return (
    <div className="bg-white text-black rounded-2xl p-6 flex flex-col items-center shadow-md hover:shadow-xl transition-transform duration-300 hover:scale-105 border border-gray-100">
      <div className="mb-2">{amenityIcons[icon]}</div>
      <h1 className='text-xl font-semibold mb-1'>{title}</h1>
      <p className="text-gray-600 text-center">{message}</p>
    </div>
  );
}

function HouseImage({ imgUrl }) {
  return (
    <div className="w-full flex justify-center items-center">
      <img
        src={imgUrl}
        alt="H√¨nh nh√† tr·ªç"
        className="rounded-2xl w-full h-[320px] object-cover shadow-lg border border-gray-100 hover:scale-105 hover:shadow-2xl transition-transform duration-300"
      />
    </div>
  );
}

export default Home
